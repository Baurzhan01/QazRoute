// components/references/ReferenceDialog.tsx
"use client";

import { useMemo, useState } from "react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { toast } from "@/components/ui/use-toast";
import { referenceService } from "@/service/referenceService";
import type { ReferenceType } from "@/types/reference.types";
import type { RouteAssignment } from "@/types/releasePlanTypes";

interface ReferenceDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  assignment: RouteAssignment | null;
  onCreated?: (referenceId: string) => void;
}

const OPTIONS: { value: ReferenceType; label: string }[] = [
  { value: "FamilyReason", label: "–ü–æ —Å–µ–º–µ–π–Ω—ã–º –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º" },
  { value: "SickByCall", label: "–ë–æ–ª–µ–∑–Ω—å –ø–æ –∑–≤–æ–Ω–∫—É (—É—Ç—Ä–æ–º)" },
  { value: "PoliceCallBeforeDeparture", label: "102 (–¥–æ –≤—ã–µ–∑–¥–∞ –Ω–∞ –ª–∏–Ω–∏—é)" },
  { value: "GasStationIssue", label: "–ê–ó–° (–ø—Ä–æ–±–∫–∏, –∫–æ–ª–æ–Ω–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)" },
  { value: "PoliceOperation", label: "–û–ü–ú (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ì–ê–ò)" },
  { value: "AccidentInDepot", label: "–î–¢–ü –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –ø–∞—Ä–∫–∞" },
  { value: "DriverLate", label: "–û–ø–æ–∑–¥–∞–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª—è" },
  { value: "TechnicalIssue", label: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å" },
  { value: "AlcoholIntoxication", label: "–ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–æ–∫—Å–∏–∫–∞—Ü–∏—è" },
  { value: "NoCharge", label: "–ù–µ—Ç –∑–∞—Ä—è–¥–∫–∏" },
  { value: "EmergencyInDepot", label: "–ß–° (—Ç—Ä–∞–≤–º–∞ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏)" },
  { value: "Other", label: "–î—Ä—É–≥–æ–µ (—É–∫–∞–∑–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É)" },
];

export default function ReferenceDialog({
  open,
  onOpenChange,
  assignment,
  onCreated,
}: ReferenceDialogProps) {
  const [type, setType] = useState<ReferenceType | "">("");
  const [description, setDescription] = useState("");
  const [loading, setLoading] = useState(false);

  // üëá –û–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è Other –ò TechnicalIssue
  const canDescribe = type === "Other" || type === "TechnicalIssue";
  // üëá –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è Other
  const mustDescribe = type === "Other";
  const isValid = !!assignment && !!type && (!mustDescribe || description.trim().length > 0);

  const info = useMemo(() => {
    if (!assignment) return null;
    return {
      routeNumber: assignment.routeNumber,
      busLineNumber: assignment.busLineNumber,
      garageNumber: assignment.garageNumber ?? assignment.bus?.garageNumber ?? "‚Äî",
      stateNumber: assignment.stateNumber ?? assignment.bus?.govNumber ?? "‚Äî",
      driverName: assignment.driver?.fullName ?? "‚Äî",
      driverService: assignment.driver?.serviceNumber ?? "‚Äî",
    };
  }, [assignment]);

  const handleClose = () => {
    setType("");
    setDescription("");
    onOpenChange(false);
  };

  const handleSubmit = async () => {
    if (!assignment) return;

    try {
      setLoading(true);
      const body = {
        dispatchBusLineId: assignment.dispatchBusLineId,
        type: type as ReferenceType,
        // –î–ª—è Other ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –¥–ª—è TechnicalIssue ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö ‚Äî –ø—É—Å—Ç–æ
        description: canDescribe ? description.trim() : "",
      };
      const res = await referenceService.create(body);
      if (!res.isSuccess) throw new Error(res.error || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É");

      // –°–æ–±—ã—Ç–∏–µ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è AssignmentCell –∏ —Ö—É–∫–∞ useConvoyReleasePlan
      if (typeof window !== "undefined") {
        window.dispatchEvent(
          new CustomEvent("reference:created", {
            detail: {
              dispatchBusLineId: assignment.dispatchBusLineId,
              referenceId: res.value,
              type,
              description: canDescribe ? description.trim() : "",
            },
          })
        );
      }

      toast({ title: "–°–ø—Ä–∞–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞", description: "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞." });
      onCreated?.(res.value);
      handleClose();
    } catch (e: any) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: e?.message || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É",
        variant: "destructive",
      });
    } finally {
      setLoading(false);
    }
  };

  const labelHelp =
    type === "Other"
      ? "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–ª—è ¬´–î—Ä—É–≥–æ–µ¬ª"
      : type === "TechnicalIssue"
      ? "–ú–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ–ø–∏—Å–∞—Ç—å –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
      : "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞";

  const placeholder =
    type === "Other"
      ? "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É"
      : type === "TechnicalIssue"
      ? "–û–ø–∏—à–∏—Ç–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å (–ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏)"
      : "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞";

  return (
    <Dialog open={open} onOpenChange={(o) => (o ? onOpenChange(o) : handleClose())}>
      <DialogContent className="sm:max-w-lg">
        <DialogHeader>
          <DialogTitle>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –≤—ã—Ö–æ–¥—É</DialogTitle>
          <DialogDescription>
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –ø–æ —Ç–µ–∫—É—â–µ–º—É –≤—ã—Ö–æ–¥—É (DispatchBusLine)
          </DialogDescription>
        </DialogHeader>

        {/* –®–∞–ø–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –≤—ã—Ö–æ–¥–∞/–≤–æ–¥–∏—Ç–µ–ª—è */}
        <div className="rounded-md border p-3 bg-gray-50 space-y-1">
          <div className="text-sm">
            <span className="text-gray-500">–ú–∞—Ä—à—Ä—É—Ç: </span>
            <span className="font-medium">{info?.routeNumber ?? "‚Äî"}</span>
            <span className="mx-2">‚Ä¢</span>
            <span className="text-gray-500">–í—ã—Ö–æ–¥: </span>
            <span className="font-medium">{info?.busLineNumber ?? "‚Äî"}</span>
          </div>
          <div className="text-sm">
            <span className="text-gray-500">–ê–≤—Ç–æ–±—É—Å: </span>
            <span className="font-medium">
              {info?.garageNumber} ({info?.stateNumber})
            </span>
          </div>
          <div className="text-sm">
            <span className="text-gray-500">–í–æ–¥–∏—Ç–µ–ª—å: </span>
            <span className="font-medium">
              {info?.driverName} ‚Äî —Ç–∞–±. ‚Ññ {info?.driverService}
            </span>
          </div>
        </div>

        {/* –í—ã–±–æ—Ä —Ç–∏–ø–∞ */}
        <div className="grid gap-2">
          <Label>–¢–∏–ø —Å–ø—Ä–∞–≤–∫–∏</Label>
          <Select value={type} onValueChange={(v) => setType(v as ReferenceType)}>
            <SelectTrigger>
              <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø" />
            </SelectTrigger>
            <SelectContent>
              {OPTIONS.map((o) => (
                <SelectItem key={o.value} value={o.value}>
                  {o.label}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ ‚Äî –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è Other (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) –∏ TechnicalIssue (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */}
        <div className="grid gap-2">
          <Label htmlFor="ref-desc">
            –û–ø–∏—Å–∞–Ω–∏–µ {type === "Other" ? "(–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)" : type === "TechnicalIssue" ? "(–ø–æ –∂–µ–ª–∞–Ω–∏—é)" : "(–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)"}
          </Label>
          <Textarea
            id="ref-desc"
            placeholder={placeholder}
            disabled={!canDescribe}
            value={description}
            onChange={(e) => setDescription(e.target.value)}
            className={!canDescribe ? "opacity-60 cursor-not-allowed" : ""}
          />
          <div className="text-xs text-gray-500">
            {canDescribe ? `${description.trim().length} —Å–∏–º–≤–æ–ª–æ–≤. ${labelHelp}` : labelHelp}
          </div>
        </div>

        <DialogFooter>
          <Button variant="outline" onClick={handleClose} disabled={loading}>
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button onClick={handleSubmit} disabled={!isValid || loading}>
            {loading ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"}
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}
