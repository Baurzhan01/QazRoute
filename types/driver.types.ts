// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–≤—Ç–æ–ø–∞—Ä–∫–∞

export interface Bus {
  id: string
  govNumber: string
  garageNumber: string
  additionalInfo: string
  busLineId: string
  busStatus: string
  convoyId: string
}


export type DriverStatus =
  | "OnWork"
  | "DayOff"
  | "OnVacation"
  | "OnSickLeave"
  | "Intern"
  | "Fired"

// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–∞—Ç—É—Å—É:
export type DriverStatusCount = {
  [K in DriverStatus]: number
} & {
  total: number
}


export interface Driver {
  id?: string
  fullName: string
  serviceNumber: string
  address: string
  phone: string
  birthDate: string
  additionalInfo: string
  driverStatus: DriverStatus
  busId?: string | null
  lastBusId?: string | null
  convoyId?: string
  inReserve?: boolean
  buses?: Bus[] // üî• –¥–æ–±–∞–≤—å —ç—Ç–æ
  iin?: string | null
}

export interface DisplayDriver {
  id: string
  fullName: string
  serviceNumber: string
  driverStatus: DriverStatus
  isAssigned?: boolean
  assignedRoute?: string
  assignedDeparture?: number
  isBusy?: boolean // ‚Üê –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
}


export interface DisplayBus {
  id: string
  govNumber: string
  garageNumber: string
  busStatus: string
  isAssigned?: boolean
  assignedRoute?: string
  assignedDeparture?: number
  isBusy?: boolean // ‚Üê –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
}

// –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–¥–∏—Ç–µ–ª—è (POST /drivers)
export interface CreateDriverRequest extends Omit<Driver, "id" | "photo" | "inReserve"> {}

// –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–æ–¥–∏—Ç–µ–ª—è (PUT /drivers/{id})
export interface UpdateDriverRequest extends Omit<Driver, "id" | "photo" | "inReserve"> {}

// –û—Ç–≤–µ—Ç API
export interface ApiResponse<T> {
  isSuccess: boolean
  error: string | null
  statusCode: number
  value: T | null
}

export type PickedDriver = Pick<Driver, "id" | "serviceNumber" | "fullName">

// –î–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–¥–∏—Ç–µ–ª–µ–π (POST /drivers/filter)
export interface DriverFilterRequest {
  convoyId: string | null
  fullName: string | null
  serviceNumber: string | null
  address: string | null
  phone: string | null
  driverStatus: DriverStatus | null
  // isInReserve: boolean | null
  page: number 
  pageSize: number
}

// –û—Ç–≤–µ—Ç –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–¥–∏—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
export interface PaginatedDriversResponse {
  items: Driver[]
  totalCount: number
  statusCounts: DriverStatusCount
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –≤–æ–¥–∏—Ç–µ–ª–µ–π

// –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–ª–æ—Ç–µ
export interface FleetStats {
  totalBuses: number
  activeRoutes: number
  drivers: number
  maintenanceBuses: number
}

export interface FleetStatus {
  operational: number
  inMaintenance: number
  outOfService: number
}

export interface FuelConsumption {
  thisMonth: number
  lastMonth: number
  efficiency: number
}

export interface MaintenanceStatus {
  completed: number
  scheduled: number
  overdue: number
}

export interface Alert {
  id: string
  severity: "high" | "medium" | "low"
  title: string
  description: string
  timestamp: string
}

export interface ScheduleItem {
  id: string
  title: string
  description: string
  date: string
  icon: "clock" | "file" | "users"
}

export type WeekendDriver = DisplayDriver;
export type WeekendBus = DisplayBus;
// –ù–æ–≤–∞—è —Å—É—â–Ω–æ—Å—Ç—å BusLine
export interface BusLine {
  id?: string
  number: string
  exitTime: string // ISO —Ñ–æ—Ä–º–∞—Ç
  endTime: string // ISO —Ñ–æ—Ä–º–∞—Ç
  shiftChangeTime: string // ISO —Ñ–æ—Ä–º–∞—Ç
  routeId: string
}
