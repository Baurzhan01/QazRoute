// types/dispatch.types.ts

import type { DisplayBus } from "@/types/bus.types"
import type { DisplayDriver } from "@/types/driver.types"
import type { Schedule } from "@/types/schedule.types"

// üîµ –û—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–ø –≤—ã–µ–∑–¥–æ–≤
export interface Departure {
  id: string
  departureNumber: number
  departureTime: string
  scheduleTime: string
  shift2Time?: string
  endTime: string
  additionalInfo: string
  shift2AdditionalInfo: string
  bus?: DisplayBus
  driver?: DisplayDriver
  shift2Driver?: DisplayDriver

  // üëá –î–æ–±–∞–≤–∏—Ç—å —ç—Ç—É —Å—Ç—Ä–æ–∫—É
  isModified?: boolean
}

// üõ†Ô∏è Props –¥–ª—è –º–æ–¥–∞–ª–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞
export interface EditAssignmentModalProps {
  isOpen: boolean
  onClose: () => void
  departure: Departure | null
  availableBuses: DisplayBus[]
  availableDrivers: DisplayDriver[]
  onSave: (updated: Departure) => void
}

// üõ†Ô∏è Props –¥–ª—è –º–æ–¥–∞–ª–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–π —Å–º–µ–Ω—ã
export interface SecondShiftModalProps {
  isOpen: boolean
  onClose: () => void
  departure: Departure | null
  availableDrivers: DisplayDriver[]
  onSave: (driverId: string, shiftChangeTime: string) => void
  schedules: Schedule[]
}

// üõ†Ô∏è Props –¥–ª—è –º–æ–¥–∞–ª–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
export interface TimeEditModalProps {
  isOpen: boolean
  onClose: () => void
  onSave: (time: string) => void
  currentTime: string
  title: string
}

// üöå –î–µ—Ç–∞–ª–∏ –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã / –º–∞—Ä—à—Ä—É—Ç + –∞–≤—Ç–æ–±—É—Å—ã
export interface RouteDetails {
  routeId: string
  routeNumber: string
  buses: {
    busId: string
    garageNumber: string
    govNumber?: string
    driver?: {
      personnelNumber: string
      lastName: string
      firstName: string
      middleName?: string
      shifts: {
        departureTime: string
        scheduleTime: string
        additionalInfo?: string
      }[]
    }
    endTime?: string
    isReserve?: boolean
  }[]
}

// üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è API /api/dispatches/route/{routeId}/date/{date}
export interface RouteDispatchDetails {
  id: string
  date: {
    year: number
    month: number
    day: number
    dayOfWeek: number
    dayOfYear: number
    dayNumber: number
  }
  routeId: string
  routeNumber: string
  busLines: BusLineAssignment[]
}

// üìÑ –û–¥–∏–Ω –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥ (–∞–≤—Ç–æ–±—É—Å + –≤–æ–¥–∏—Ç–µ–ª–∏ + –≥—Ä–∞—Ñ–∏–∫)
export interface BusLineAssignment {
  id: string
  busLine: {
    id: string
    number: string
    exitTime: TimeObject
    endTime: TimeObject
  }
  bus: {
    id: string
    garageNumber: string
    govNumber: string
  } | null
  driver1: {
    id: string
    fullName: string
    serviceNumber: string
  } | null
  driver2: {
    id: string
    fullName: string
    serviceNumber: string
  } | null
  scheduleStart: TimeObject
  scheduleShiftChange: TimeObject
}

// üìÖ –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
export interface TimeObject {
  hour: number
  minute: number
  second: number
  millisecond: number
  microsecond: number
  nanosecond: number
  ticks: number
}
